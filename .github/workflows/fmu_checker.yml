name: FMU Compliance Checker

on:
  workflow_call:

jobs:
  fmu-compliance-checker:
    name: FMU Compliance Checker
    runs-on: ubuntu-latest

    steps:
    - name: Cache Model FMU
      id: cache-model-fmu
      uses: actions/cache@v4
      with:
        path: /tmp/model_fmu
        key: ${{ runner.os }}-model-fmu-${{ github.sha }}

    - name: Cache Protobuf
      id: cache-protobuf
      uses: actions/cache@v4
      with:
        path: protobuf-21.12
        key: ${{ runner.os }}-protobuf

    - name: Download ProtoBuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      run: curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protobuf-all-21.12.tar.gz && tar xzvf protobuf-all-21.12.tar.gz

    - name: Build ProtoBuf
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      working-directory: protobuf-21.12
      run: ./configure DIST_LANG=cpp --disable-shared CXXFLAGS="-fPIC" && make -j4

    - name: Install ProtoBuf
      working-directory: protobuf-21.12
      run: sudo make install && sudo ldconfig

    - name: Cache FMUComplianceChecker
      id: cache-fmu-checker
      uses: actions/cache@v4
      with:
        path: /tmp/FMUComplianceChecker
        key: ${{ runner.os }}-fmu-checker

    - name: Get FMUComplianceChecker
      if: steps.cache-fmu-checker.outputs.cache-hit != 'true'
      working-directory: /tmp
      run: git clone https://github.com/modelica-tools/FMUComplianceChecker.git

    - name: Build FMUComplianceChecker
      if: steps.cache-fmu-checker.outputs.cache-hit != 'true'
      working-directory: /tmp/FMUComplianceChecker
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .

    - name: Run FMUComplianceChecker
      working-directory: /tmp/FMUComplianceChecker/build
      run: ./fmuCheck.linux64 /tmp/model_fmu/${{ github.event.repository.name }}.fmu
      
    - name: Commit ID
      working-directory: /tmp/FMUComplianceChecker
      run: |
        echo "Commit ID: "
        echo $(git rev-parse --short HEAD)

  fmpy:
    name: FMPy Validate
    runs-on: ubuntu-latest

    steps:
      - name: Cache Model FMU
        id: cache-model-fmu
        uses: actions/cache@v4
        with:
          path: /tmp/model_fmu
          key: ${{ runner.os }}-model-fmu-${{ github.sha }}

      - name: Install FMPy
        run: python -m pip install fmpy==0.3.16

      - name: Run FMPy Validate
        working-directory: /tmp/model_fmu
        run: fmpy validate ${{ github.event.repository.name }}.fmu
