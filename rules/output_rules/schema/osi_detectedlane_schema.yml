DetectedLane:
  header: any(list(include('rules', required=False)), null(), required=False)
  candidate: any(list(include('rules', required=False)), null(), required=False)
  CandidateLane:
    probability: any(list(include('rules', required=False)), null(), required=False)
    classification: any(list(include('rules', required=False)), null(), required=False)
DetectedLaneBoundary:
  header: any(list(include('rules', required=False)), null(), required=False)
  candidate: any(list(include('rules', required=False)), null(), required=False)
  boundary_line: any(list(include('rules', required=False)), null(), required=False)
  boundary_line_rmse: any(list(include('rules', required=False)), null(), required=False)
  boundary_line_confidences: any(list(include('rules', required=False)), null(), required=False)
  color_description: any(list(include('rules', required=False)), null(), required=False)
  CandidateLaneBoundary:
    probability: any(list(include('rules', required=False)), null(), required=False)
    classification: any(list(include('rules', required=False)), null(), required=False)
---
rules:
  is_greater_than: num(required=False)
  is_greater_than_or_equal_to: num(required=False)
  is_less_than_or_equal_to: num(required=False)
  is_less_than: num(required=False)
  is_equal_to: any(num(), bool(), required=False)
  is_different_to: num(required=False)
  is_globally_unique: str(required=False)
  refers_to: str(required=False)
  is_iso_country_code: str(required=False)
  is_set: str(required=False)
  check_if: list(include('rules', required=False),required=False)
  do_check: any(required=False)
  target: any(required=False)
  first_element: any(required=False)
  last_element: any(required=False)