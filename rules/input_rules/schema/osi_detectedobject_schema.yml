DetectedItemHeader:
  tracking_id: any(list(include('rules', required=False)), null(), required=False)
  ground_truth_id: any(list(include('rules', required=False)), null(), required=False)
  existence_probability: any(list(include('rules', required=False)), null(), required=False)
  age: any(list(include('rules', required=False)), null(), required=False)
  measurement_state: any(list(include('rules', required=False)), null(), required=False)
  sensor_id: any(list(include('rules', required=False)), null(), required=False)
DetectedStationaryObject:
  header: any(list(include('rules', required=False)), null(), required=False)
  base: any(list(include('rules', required=False)), null(), required=False)
  base_rmse: any(list(include('rules', required=False)), null(), required=False)
  candidate: any(list(include('rules', required=False)), null(), required=False)
  color_description: any(list(include('rules', required=False)), null(), required=False)
  radar_specifics: any(list(include('rules', required=False)), null(), required=False)
  lidar_specifics: any(list(include('rules', required=False)), null(), required=False)
  camera_specifics: any(list(include('rules', required=False)), null(), required=False)
  ultrasonic_specifics: any(list(include('rules', required=False)), null(), required=False)
  CandidateStationaryObject:
    probability: any(list(include('rules', required=False)), null(), required=False)
    classification: any(list(include('rules', required=False)), null(), required=False)
DetectedMovingObject:
  header: any(list(include('rules', required=False)), null(), required=False)
  base: any(list(include('rules', required=False)), null(), required=False)
  base_rmse: any(list(include('rules', required=False)), null(), required=False)
  reference_point: any(list(include('rules', required=False)), null(), required=False)
  movement_state: any(list(include('rules', required=False)), null(), required=False)
  percentage_side_lane_left: any(list(include('rules', required=False)), null(), required=False)
  percentage_side_lane_right: any(list(include('rules', required=False)), null(), required=False)
  candidate: any(list(include('rules', required=False)), null(), required=False)
  color_description: any(list(include('rules', required=False)), null(), required=False)
  radar_specifics: any(list(include('rules', required=False)), null(), required=False)
  lidar_specifics: any(list(include('rules', required=False)), null(), required=False)
  camera_specifics: any(list(include('rules', required=False)), null(), required=False)
  ultrasonic_specifics: any(list(include('rules', required=False)), null(), required=False)
  CandidateMovingObject:
    probability: any(list(include('rules', required=False)), null(), required=False)
    type: any(list(include('rules', required=False)), null(), required=False)
    vehicle_classification: any(list(include('rules', required=False)), null(), required=False)
    head_pose: any(list(include('rules', required=False)), null(), required=False)
    upper_body_pose: any(list(include('rules', required=False)), null(), required=False)
---
rules:
  is_greater_than: num(required=False)
  is_greater_than_or_equal_to: num(required=False)
  is_less_than_or_equal_to: num(required=False)
  is_less_than: num(required=False)
  is_equal_to: any(num(), bool(), required=False)
  is_different_to: num(required=False)
  is_globally_unique: str(required=False)
  refers_to: str(required=False)
  is_iso_country_code: str(required=False)
  is_set: str(required=False)
  check_if: list(include('rules', required=False),required=False)
  do_check: any(required=False)
  target: any(required=False)
  first_element: any(required=False)
  last_element: any(required=False)